import numpy as np
import scipy.io as sio
import os
import copy
from keras.callbacks import EarlyStopping
from keras.models import Model
from keras import backend as K
import prep_four_groups as pfg
import high_res_encoder as hre
import low_res_encoder as lre

input_img = Input(shape=(128, 128, 1)) 

hr_encoder = hre.get_hr_encoder()
hr_model = Model(hr_encoder, decoded)
hr_model.compile(optimizer='adadelta', loss='binary_crossentropy')

lr_encoder = lre.get_lr_encoder()
lr_model = Model(lr_encoder, decoded)
lr_model.compile(optimizer='adadelta', loss='binary_crossentropy')

all_slcs = pfg.get_four_groups_slices()
print("all slcs shape:")
print(str(tuple(all_slcs.shape)))
sr_encoder.fit(all_slcs, all_slcs,
                epochs=50,
                batch_size=128,
                shuffle=True,
                validation_split=0.3,
                callbacks=[EarlyStopping(patience=2)])
ex_pred = sr_encoder.predict(all_slcs[0:1,:,:])
sio.savemat('auto_pred.mat', {'pred':ex_pred, 'orig': all_slcs[0:100,:,:]})

